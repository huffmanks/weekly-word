---
interface Props {
  type?: "default" | "info" | "warning" | "error";
}

const { type = "default" } = Astro.props;

const baseStyles = "relative mb-8 flex rounded border p-3";

const calloutMap = new Map([
  [
    "default",
    {
      icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M12 21a9 9 0 1 0-9-9c0 1.488.36 2.89 1 4.127L3 21l4.873-1c1.236.639 2.64 1 4.127 1" stroke-width="1"/></svg>`,
      variantStyles:
        "border-green-800 bg-green-100 text-green-950 dark:border-green-200/20 dark:bg-green-950/20 dark:text-green-200",
    },
  ],
  [
    "info",
    {
      icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linejoin="round" stroke-width="1"><path stroke-linecap="round" d="M4 4.001h16v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"/><path stroke-width="1.5" d="M12 8h.01v.01H12z"/><path stroke-linecap="round" d="M12 12v4"/></g></svg>`,
      variantStyles:
        "border-blue-800 bg-blue-100 text-blue-950 dark:border-blue-200/20 dark:bg-blue-950/20 dark:text-blue-200",
    },
  ],
  [
    "warning",
    {
      icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linejoin="round" stroke-width="1"><path stroke-linecap="round" d="M4 4.001h16v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"/><path stroke-width="1.5" d="M12 16h.01v.01H12z"/><path stroke-linecap="round" d="M12 12V8"/></g></svg>`,
      variantStyles:
        "border-orange-800 bg-orange-100 text-orange-950 dark:border-orange-200/20 dark:bg-orange-950/30 dark:text-orange-200",
    },
  ],
  [
    "error",
    {
      icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M4 4h16v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm10 6l-4 4m0-4l4 4" stroke-width="1"/></svg>`,
      variantStyles:
        "border-red-800 bg-red-100 text-red-950 dark:border-red-200/20 dark:bg-red-950/20 dark:text-red-200",
    },
  ],
]);

const callout = calloutMap.get(type) ?? calloutMap.get("default")!;
---

<div class:list={["not-prose", baseStyles, callout.variantStyles]}>
  <span class="pointer-events-none pr-3 text-xl select-none" set:html={callout.icon} />
  <slot />
</div>
