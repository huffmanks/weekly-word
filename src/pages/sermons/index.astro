---
import { type CollectionEntry, getCollection } from "astro:content";

import { SITE_CONFIG } from "@constants";
import BaseLayout from "@layouts/BaseLayout.astro";

import ArrowCard from "@components/ArrowCard.astro";
import Container from "@components/Container.astro";

const data = (await getCollection("sermons", ({ data }) => !data.draft)).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

type Accumulator = {
  [year: string]: CollectionEntry<"sermons">[];
};

const sermons = data.reduce((acc: Accumulator, sermon) => {
  const year = sermon.data.date.getUTCFullYear().toString();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(sermon);
  return acc;
}, {});

const years = Object.keys(sermons).sort((a, b) => parseInt(b) - parseInt(a));
---

<BaseLayout title={SITE_CONFIG.title} description={SITE_CONFIG.description}>
  <Container>
    <aside data-pagefind-ignore>
      <div class="space-y-10">
        <div class="space-y-4">
          {
            years.map((year) => (
              <section class="animate space-y-4">
                <div class="font-semibold text-black dark:text-white">{year}</div>
                <div>
                  <ul class="not-prose flex flex-col gap-4">
                    {sermons[year].map((sermon) => (
                      <li>
                        <ArrowCard entry={sermon} />
                      </li>
                    ))}
                  </ul>
                </div>
              </section>
            ))
          }
        </div>
      </div>
    </aside>
  </Container>
</BaseLayout>
